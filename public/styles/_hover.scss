$mediumDuration: .3s !default;
$webkit: true !default;
$moz: false !default;
$ms: false !default;
$o: false !default;
$primaryColor: #00AFB5 !default;
$tipWidth: 10px !default;  //the width of the speech bubble tip
$tipHeight: 10px !default; //the height of the speech bubble tip
$tipColor: $primaryColor !default;

@mixin prefixed($property, $value) {
	@if $webkit == true {
	  -webkit-#{$property}: #{$value};
	}
  
	@if $moz == true {
	  -moz-#{$property}: #{$value};
	}
  
	@if $ms == true {
	  -ms-#{$property}: #{$value};
	}
  
	@if $o == true {
	  -o-#{$property}: #{$value};
	}
  
	#{$property}: #{$value};
}

@mixin hardwareAccel() {
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}

/* Bubble Top */
@mixin bubble-top {
	@include hacks();
	position: relative;

	&:before {
		pointer-events: none;
		position: absolute;
		z-index: -1;
		content: '';
		border-style: solid;
		@include prefixed(transition-duration, $mediumDuration);
		@include prefixed(transition-property, transform);
		left: calc(50% - #{$tipWidth});
		top: 0;
		border-width: 0 $tipWidth $tipHeight $tipWidth;
		border-color: transparent transparent $tipColor transparent;
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		@include prefixed(transform, translateY(-($tipHeight)));
	}
}